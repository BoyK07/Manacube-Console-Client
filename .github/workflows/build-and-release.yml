name: Build & Release Manacube Console Client

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  PROJECT: "ManacubeConsoleClient"
  target-version: "net8.0"
  compile-flags: "--self-contained=true -c Release -p:UseAppHost=true -p:IncludeNativeLibrariesForSelfExtract=true -p:EnableCompressionInSingleFile=true -p:DebugType=Embedded"

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        target: [win-x64, linux-x64]  # Adjust targets as needed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'true'

      - name: Set build date and variables
        run: |
          echo "date=$(date +'%Y%m%d')" >> $GITHUB_ENV
          echo "date_dashed=$(date -u +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "project-path=${{ github.workspace }}/${{ env.PROJECT }}" >> $GITHUB_ENV
          echo "file-ext=${{ (startsWith(matrix.target, 'win') && '.exe') || '' }}" >> $GITHUB_ENV

      - name: Define paths and version
        run: |
          echo "target-out-path=${{ env.project-path }}/bin/Release/${{ env.target-version }}/${{ matrix.target }}/publish/" >> $GITHUB_ENV
          echo "assembly-info=${{ env.project-path }}/Properties/AssemblyInfo.cs" >> $GITHUB_ENV
          echo "build-version-info=${{ env.date }}-${{ github.run_number }}" >> $GITHUB_ENV
          echo "commit=$(echo ${{ github.sha }} | cut -c 1-7)" >> $GITHUB_ENV
          echo "built-executable-path=${{ env.target-out-path }}${{ env.PROJECT }}${{ env.file-ext }}" >> $GITHUB_ENV

      - name: Set Assembly Version Information
        run: |
          echo "" >> ${{ env.assembly-info }}
          echo "[assembly: AssemblyConfiguration(\"GitHub build ${{ github.run_number }}, built on ${{ env.date_dashed }} from commit ${{ env.commit }}\")]" >> ${{ env.assembly-info }}

      - name: Build the executable
        run: dotnet publish "${{ env.project-path }}.sln" -f "${{ env.target-version }}" -r "${{ matrix.target }}" ${{ env.compile-flags }}
        env:
          DOTNET_NOLOGO: true

      - name: Rename built executable
        run: |
          mv "${{ env.built-executable-path }}" "${{ env.PROJECT }}-${{ env.build-version-info }}-${{ matrix.target }}${{ env.file-ext }}"

      - name: Wait briefly to prevent race conditions
        run: sleep 5s

      - name: Create or update release with artifacts
        uses: ncipollo/release-action@v1.14.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "${{ env.PROJECT }}-${{ env.build-version-info }}-${{ matrix.target }}${{ env.file-ext }}"
          tag: "${{ env.build-version-info }}"
          name: "${{ env.build-version-info }}: ${{ github.event.head_commit.message }}"
          generateReleaseNotes: true
          artifactErrorsFailBuild: true
          allowUpdates: true
          makeLatest: true
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          replacesArtifacts: false

